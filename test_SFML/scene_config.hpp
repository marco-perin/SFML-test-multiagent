#pragma once


#define NUMCELLS_C 10
#define NUMCELLS_R 10

#define SIZE_C 300
#define SIZE_R 400

#define NUM_AGENTS 20

#define GRID_PADDING 40;

#define CELLSIZE_C (SIZE_C / NUMCELLS_C)
#define CELLSIZE_R (SIZE_R / NUMCELLS_R)

#define POS2PXL_C(POS) (POS*CELLSIZE_C)
#define POS2PXL_R(POS) (POS*CELLSIZE_R)
#define POS2PXL_XY(POS) POS2PXL_C(POS.x), POS2PXL_R(POS.y)
#define POS2PXL_XY_SEPARATE(X,Y) POS2PXL_C(X), POS2PXL_R(Y)


#define MIN(A, B) ((A < B) ? (A) : (B))

#define INCELLSIZE_X (CELLSIZE_C / 3)
#define INCELLSIZE_Y (CELLSIZE_R / 3)
#define INCELLSIZE_MIN (MIN(INCELLSIZE_X, INCELLSIZE_Y))

#define POS2CELL_X(POS) (POS2PXL_C(POS) - INCELLSIZE_MIN + CELLSIZE_C/2)
#define POS2CELL_Y(POS) (POS2PXL_R(POS) - INCELLSIZE_MIN + CELLSIZE_R/2)
#define POS2CELL_XY(POS) POS2CELL_X(POS.x), POS2CELL_Y(POS.y)

#define PXL2POS_C(PXL) (PXL/CELLSIZE_C)
#define PXL2POS_R(PXL) (PXL/CELLSIZE_R)
#define PXL2POS_XY(PXL) PXL2POS_C(PXL.x), PXL2POS_R(PXL.y)
#define PXL2POS_XY_SEPARATE(X,Y) PXL2POS_C(X), PXL2POS_R(Y)